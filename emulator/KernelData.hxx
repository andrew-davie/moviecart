
/**
  Various kernel, OSD and scale definitions
  @author  Rob Bairos
*/

#pragma once

#include <stdint.h>

#define TIMECODE_HEIGHT     12
#define MAX_LEVEL           11
#define DEFAULT_LEVEL       6
#define BLANK_LINE_SIZE		(30+3+37-1) // 70-1

#define addr_kernel_48 0x800
#define addr_right_line 0x946
#define addr_set_aud_right 0x94a
#define addr_set_gdata9 0x94c
#define addr_set_gcol9 0x950
#define addr_set_gdata6 0x952
#define addr_set_gcol6 0x956
#define addr_set_gdata5 0x95a
#define addr_set_gcol5 0x95e
#define addr_set_gdata8 0x962
#define addr_set_gcol7 0x966
#define addr_set_gdata7 0x96a
#define addr_set_gcol8 0x96e
#define addr_left_line 0x980
#define addr_set_gdata1 0x982
#define addr_set_aud_left 0x986
#define addr_set_gdata4 0x98a
#define addr_set_gcol4 0x98c
#define addr_set_gcol1 0x98e
#define addr_set_gdata0 0x992
#define addr_set_gcol0 0x996
#define addr_set_gdata3 0x99a
#define addr_set_gcol2 0x99e
#define addr_set_gdata2 0x9a2
#define addr_set_gcol3 0x9a6
#define addr_pick_continue 0x9b4
#define addr_main_start 0xa00
#define addr_aud_bank_setup 0xa0c
#define addr_tg0 0xa24
#define addr_title_again 0xa3b
#define addr_wait_cnt 0xa77
#define addr_end_lines 0xa80
#define addr_set_aud_endlines 0xa8c
#define addr_set_overscan_size 0xa90
#define addr_set_vblank_size 0xaa6
#define addr_pick_transport 0xaaf
#define addr_transport_direction 0xab2
#define addr_transport_buttons 0xabb
#define addr_transport_done 0xac4
#define addr_wait_lines 0xac9
#define addr_transport_done1 0xada
#define addr_draw_title 0xb00
#define addr_title_loop 0xb50
#define addr_black_bar 0xb52
#define addr_animate_bar1 0xb58
#define addr_animate_bar_again1 0xb5a
#define addr_animate_dex1 0xb65
#define addr_audio_bank 0xb80
#define addr_reset_loop 0xbfa

// scale adjustments, automatically generated
const uint8_t  scale0[16] = {  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8}; /* 0.0000 */
const uint8_t  scale1[16] = {  6,  6,  7,  7,  7,  7,  7,  7,  8,  8,  8,  8,  8,  8,  9,  9}; /* 0.1667 */
const uint8_t  scale2[16] = {  5,  5,  6,  6,  6,  7,  7,  7,  8,  8,  8,  9,  9,  9, 10, 10}; /* 0.3333 */
const uint8_t  scale3[16] = {  4,  4,  5,  5,  6,  6,  7,  7,  8,  8,  9,  9, 10, 10, 11, 11}; /* 0.5000 */
const uint8_t  scale4[16] = {  3,  3,  4,  5,  5,  6,  7,  7,  8,  9,  9, 10, 11, 11, 12, 13}; /* 0.6667 */
const uint8_t  scale5[16] = {  1,  2,  3,  4,  5,  5,  6,  7,  8,  9, 10, 10, 11, 12, 13, 14}; /* 0.8333 */
const uint8_t  scale6[16] = {  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15}; /* 1.0000 */
const uint8_t  scale7[16] = {  0,  0,  0,  1,  3,  4,  5,  7,  8, 10, 11, 12, 14, 15, 15, 15}; /* 1.3611 */
const uint8_t  scale8[16] = {  0,  0,  0,  0,  1,  3,  5,  7,  8, 10, 12, 14, 15, 15, 15, 15}; /* 1.7778 */
const uint8_t  scale9[16] = {  0,  0,  0,  0,  0,  2,  4,  6,  9, 11, 13, 15, 15, 15, 15, 15}; /* 2.2500 */
const uint8_t scale10[16] = {  0,  0,  0,  0,  0,  1,  3,  6,  9, 12, 14, 15, 15, 15, 15, 15}; /* 2.7778 */
const uint8_t *scales[11] = {scale0, scale1, scale2, scale3, scale4, scale5, scale6, scale7, scale8, scale9, scale10};

// lower bit is ignored anyways
const uint8_t  shiftBright[16 + MAX_LEVEL - 1] = {  0,  0,  0,  0,  0,  0,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 15, 15, 15, 15};

// Compiled kernel
const unsigned char kernelROM[] = 
{
	133, 2, 185, 50, 248, 133, 27, 185, 62, 248, 133, 28, 185, 74, 248, 133,
	27, 185, 86, 248, 133, 135, 185, 98, 248, 190, 110, 248, 132, 136, 164, 135,
	132, 28, 133, 27, 134, 28, 134, 27, 164, 136, 102, 137, 176, 210, 136, 16,
	207, 96, 0, 1, 1, 1, 0, 0, 48, 48, 50, 53, 56, 48, 249, 129,
	129, 128, 248, 0, 99, 102, 102, 102, 230, 99, 140, 252, 140, 136, 112, 0,
	192, 97, 99, 102, 102, 198, 198, 198, 248, 198, 248, 0, 193, 32, 48, 24,
	24, 25, 24, 24, 24, 24, 126, 0, 249, 97, 97, 97, 97, 249, 0, 0,
	0, 0, 0, 0, 248, 128, 128, 224, 128, 248, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 133, 2, 133, 42, 169, 0, 162, 223, 133, 25,
	160, 98, 169, 159, 133, 28, 169, 248, 133, 7, 169, 231, 133, 27, 169, 242,
	133, 6, 169, 247, 133, 28, 169, 172, 133, 6, 169, 253, 133, 27, 169, 216,
	133, 7, 134, 27, 132, 6, 133, 43, 133, 128, 133, 128, 133, 128, 133, 42,
	133, 2, 169, 207, 133, 28, 169, 0, 133, 25, 162, 191, 160, 114, 169, 54,
	133, 7, 169, 243, 133, 27, 169, 66, 133, 6, 169, 239, 133, 28, 169, 238,
	133, 6, 169, 251, 133, 27, 169, 182, 133, 7, 134, 27, 132, 6, 169, 128,
	133, 32, 133, 33, 76, 70, 249, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	120, 216, 162, 255, 154, 169, 0, 149, 0, 202, 208, 251, 169, 128, 133, 130,
	169, 251, 133, 131, 169, 1, 133, 37, 133, 38, 169, 3, 133, 4, 133, 5,
	133, 2, 162, 4, 133, 128, 202, 208, 251, 133, 128, 133, 16, 133, 17, 169,
	208, 133, 32, 169, 224, 133, 33, 133, 2, 133, 42, 165, 132, 106, 106, 133,
	6, 133, 7, 169, 85, 133, 137, 32, 0, 251, 176, 239, 169, 0, 133, 9,
	133, 37, 133, 27, 133, 16, 234, 133, 17, 133, 28, 133, 27, 133, 28, 169,
	6, 133, 4, 169, 2, 133, 5, 169, 1, 133, 38, 169, 0, 133, 32, 169,
	240, 133, 33, 133, 42, 162, 5, 202, 208, 253, 133, 43, 76, 128, 250, 255,
	160, 0, 132, 27, 132, 28, 132, 27, 169, 0, 169, 0, 169, 0, 133, 25,
	162, 29, 32, 201, 250, 169, 2, 133, 0, 162, 3, 32, 201, 250, 169, 0,
	133, 0, 169, 2, 133, 1, 162, 37, 32, 201, 250, 162, 0, 134, 1, 76,
	187, 250, 173, 128, 2, 74, 74, 74, 76, 196, 250, 165, 12, 10, 173, 130,
	2, 42, 41, 23, 133, 129, 76, 70, 249, 133, 2, 169, 0, 177, 130, 133,
	25, 165, 129, 240, 5, 198, 129, 173, 128, 20, 200, 202, 208, 235, 96, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	162, 30, 32, 82, 251, 169, 2, 133, 0, 162, 3, 32, 82, 251, 169, 0,
	133, 0, 169, 2, 133, 1, 162, 37, 32, 82, 251, 169, 0, 133, 1, 198,
	132, 165, 132, 133, 133, 160, 255, 162, 30, 32, 88, 251, 162, 54, 32, 82,
	251, 160, 11, 32, 0, 248, 169, 0, 133, 27, 133, 28, 133, 27, 133, 28,
	162, 54, 32, 82, 251, 165, 132, 133, 133, 160, 1, 162, 30, 32, 88, 251,
	56, 96, 169, 0, 133, 133, 160, 0, 132, 134, 24, 165, 133, 101, 134, 133,
	133, 133, 2, 133, 9, 202, 208, 242, 96, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 250, 0, 250, 0, 250,
};

// OSD labels

const uint8_t brightLabelEven[] = 
{
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	0, 225, 48, 12, 252,
	6, 140, 231, 96, 0,
	0, 113, 48, 12, 96,
	6, 140, 192, 96, 0,
	0, 225, 49, 15, 96,
	6, 152, 195, 96, 0,
	0, 49, 48, 12, 96,
	6, 140, 231, 96, 0,
	0, 225, 48, 12, 96,
};

const uint8_t brightLabelOdd[] = 
{
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	7, 252, 126, 99, 0,
	0, 113, 48, 12, 96,
	6, 140, 192, 96, 0,
	0, 97, 49, 12, 96,
	7, 248, 223, 224, 0,
	0, 113, 49, 12, 96,
	6, 156, 195, 96, 0,
	0, 113, 48, 12, 96,
	7, 142, 127, 96, 0,
	0, 0, 0, 0, 0
};

const uint8_t volumeLabelEven[] = 
{
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	0, 199, 192, 14, 254,
	113, 112, 99, 112, 0,
	0, 140, 192, 14, 192,
	51, 48, 99, 240, 0,
	0, 28, 192, 15, 254,
	31, 48, 99, 240, 0,
	0, 12, 192, 15, 192,
	30, 112, 119, 176, 0,
	0, 7, 252, 12, 254,
};

const uint8_t volumeLabelOdd[] = 
{
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	97, 224, 99, 112, 0,
	0, 142, 192, 14, 192,
	51, 112, 99, 112, 0,
	0, 28, 192, 15, 192,
	59, 48, 99, 240, 0,
	0, 28, 192, 15, 192,
	30, 112, 99, 176, 0,
	0, 14, 192, 13, 192,
	14, 224, 62, 48, 0,
	0, 0, 0, 0, 0
};

// Level bars
// 8 rows * 5 columns = 40

const uint8_t levelBarsEvenData[] =
{
	/**/
	0, 0, 0, 0, 0,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	2, 40, 161, 133, 20,
	20, 80, 66, 10, 32,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	0, 0, 0, 0, 0,
	/**/
	0, 0, 0, 0, 0,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 40, 161, 133, 20,
	244, 80, 66, 10, 32,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	0, 0, 0, 0, 0,
	/**/
	0, 0, 0, 0, 0,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 232, 161, 133, 20,
	247, 80, 66, 10, 32,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	0, 0, 0, 0, 0,
	/**/
	0, 0, 0, 0, 0,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 239, 161, 133, 20,
	247, 208, 66, 10, 32,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	0, 0, 0, 0, 0,
	/**/
	0, 0, 0, 0, 0,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 239, 161, 133, 20,
	247, 223, 66, 10, 32,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	0, 0, 0, 0, 0,
	/**/
	0, 0, 0, 0, 0,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 239, 191, 133, 20,
	247, 223, 66, 10, 32,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	0, 0, 0, 0, 0,
	/**/
	0, 0, 0, 0, 0,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 239, 191, 133, 20,
	247, 223, 126, 10, 32,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	0, 0, 0, 0, 0,
	/**/
	0, 0, 0, 0, 0,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 20,
	247, 223, 126, 10, 32,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	0, 0, 0, 0, 0,
	/**/
	0, 0, 0, 0, 0,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 20,
	247, 223, 126, 250, 32,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	0, 0, 0, 0, 0,
	/**/
	0, 0, 0, 0, 0,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 244,
	247, 223, 126, 251, 32,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	0, 0, 0, 0, 0,
	/**/
	0, 0, 0, 0, 0,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	0, 0, 0, 0, 0,

};

const uint8_t levelBarsOddData[] =
{
	/**/
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	20, 80, 66, 10, 32,
	2, 40, 161, 133, 20,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	/**/
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	244, 80, 66, 10, 32,
	3, 40, 161, 133, 20,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	/**/
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	247, 80, 66, 10, 32,
	3, 232, 161, 133, 20,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	/**/
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	247, 208, 66, 10, 32,
	3, 239, 161, 133, 20,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	/**/
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	247, 223, 66, 10, 32,
	3, 239, 161, 133, 20,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	/**/
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	247, 223, 66, 10, 32,
	3, 239, 191, 133, 20,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	/**/
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	247, 223, 126, 10, 32,
	3, 239, 191, 133, 20,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	/**/
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	247, 223, 126, 10, 32,
	3, 239, 191, 253, 20,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	/**/
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	247, 223, 126, 250, 32,
	3, 239, 191, 253, 20,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	/**/
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 32,
	3, 239, 191, 253, 244,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
	/**/
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	247, 223, 126, 251, 224,
	3, 239, 191, 253, 247,
	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,
};

